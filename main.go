/*

0 0 {10 10000000 352221}
0 1 {10 10000000 344892}
0 2 {10 10000000 361052}
0 3 {10 10000000 350174}
0 4 {10 10000000 350570}
0 5 {10 10000000 369684}
0 6 {10 10000000 360337}
0 7 {10 10000000 368930}
0 8 {10 10000000 350353}
0 9 {10 10000000 348917}
0 10 {10 10000000 342927}
0 11 {10 10000000 361501}
0 12 {10 10000000 367139}
0 13 {10 10000000 353734}
0 14 {10 10000000 363506}
0 15 {10 10000000 347092}
0 16 {10 10000000 354004}
0 17 {10 10000000 347813}
0 18 {10 10000000 362835}
0 19 {10 10000000 350415}
0 20 {10 10000000 348407}
0 21 {10 10000000 362405}
0 22 {10 10000000 362748}
0 23 {10 10000000 358725}
0 24 {10 10000000 358158}
0 25 {10 10000000 358880}
0 26 {10 10000000 352131}
0 27 {10 10000000 370430}
0 28 {10 10000000 344690}
0 29 {10 10000000 365387}
0 30 {10 10000000 327461}
0 31 {10 10000000 333816}
0 32 {10 10000000 367196}
0 33 {10 10000000 368000}
0 34 {10 10000000 354068}
0 35 {10 10000000 366335}
0 36 {10 10000000 352557}
0 37 {10 10000000 340203}
0 38 {10 10000000 368592}
0 39 {10 10000000 361419}
0 40 {10 10000000 351946}
0 41 {10 10000000 351997}
0 42 {10 10000000 342121}
0 43 {10 10000000 371829}
0 44 {10 10000000 346828}
0 45 {10 10000000 362005}
0 46 {10 10000000 351391}
0 47 {10 10000000 356567}
0 48 {10 10000000 337130}
0 49 {10 10000000 371636}
0 50 {10 10000000 362556}
0 51 {10 10000000 360901}
0 52 {10 10000000 371270}
0 53 {10 10000000 355931}
0 54 {10 10000000 354967}
0 55 {10 10000000 350629}
0 56 {10 10000000 335223}
0 57 {10 10000000 337039}
0 58 {10 10000000 344471}
0 59 {10 10000000 350073}
0 60 {10 10000000 372907}
0 61 {10 10000000 364574}
0 62 {10 10000000 354089}
0 63 {10 10000000 360640}
0 64 {10 10000000 359784}
0 65 {10 10000000 359369}
0 66 {10 10000000 355719}
0 67 {10 10000000 358966}
0 68 {10 10000000 355086}
0 69 {10 10000000 336659}
0 70 {10 10000000 340739}
0 71 {10 10000000 369285}
0 72 {10 10000000 341536}
0 73 {10 10000000 335359}
0 74 {10 10000000 345959}
0 75 {10 10000000 332924}
0 76 {10 10000000 333650}
0 77 {10 10000000 345833}
0 78 {10 10000000 331052}
0 79 {10 10000000 333460}
0 80 {10 1029798 34783}
1 0 {10 10000000 335658}
1 1 {10 10000000 338268}
1 2 {10 10000000 315080}
1 3 {10 10000000 325034}
1 4 {10 10000000 337895}
1 5 {10 10000000 350167}
1 6 {10 10000000 342261}
1 7 {10 10000000 368198}
1 8 {10 10000000 346821}
1 9 {10 10000000 357285}
1 10 {10 10000000 326374}
1 11 {10 10000000 349328}
1 12 {10 10000000 367598}
1 13 {10 10000000 349902}
1 14 {10 10000000 350039}
1 15 {10 10000000 319704}
1 16 {10 10000000 315068}
1 17 {10 10000000 309681}
1 18 {10 10000000 288335}
1 19 {10 10000000 328528}
1 20 {10 10000000 359640}
1 21 {10 10000000 361782}
1 22 {10 10000000 368838}
1 23 {10 10000000 345355}
1 24 {10 10000000 340613}
1 25 {10 10000000 339647}
1 26 {10 10000000 340271}
1 27 {10 10000000 361467}
1 28 {10 10000000 351089}
1 29 {10 10000000 342382}
1 30 {10 10000000 338848}
1 31 {10 10000000 333130}
1 32 {10 10000000 368474}
1 33 {10 10000000 349722}
1 34 {10 10000000 355168}
1 35 {10 10000000 357633}
1 36 {10 10000000 356126}
1 37 {10 10000000 325954}
1 38 {10 10000000 345120}
1 39 {10 10000000 360753}
1 40 {10 10000000 365242}
1 41 {10 10000000 342907}
1 42 {10 10000000 368089}
1 43 {10 10000000 357653}
1 44 {10 10000000 368508}
1 45 {10 10000000 364428}
1 46 {10 10000000 368725}
1 47 {10 10000000 345821}
1 48 {10 10000000 361565}
1 49 {10 10000000 375018}
1 50 {10 10000000 355272}
1 51 {10 10000000 356768}
1 52 {10 10000000 359266}
1 53 {10 10000000 372729}
1 54 {10 10000000 365460}
1 55 {10 10000000 354386}
1 56 {10 10000000 353671}
1 57 {10 10000000 365203}
1 58 {10 10000000 371644}
1 59 {10 10000000 362092}
1 60 {10 10000000 352710}
1 61 {10 10000000 364927}
1 62 {10 10000000 352983}
1 63 {10 10000000 368019}
1 64 {10 10000000 352141}
1 65 {10 10000000 353998}
1 66 {10 10000000 351119}
1 67 {10 10000000 357511}
1 68 {10 10000000 337576}
1 69 {10 10000000 357717}
1 70 {10 10000000 334595}
1 71 {10 10000000 353810}
1 72 {10 10000000 344884}
1 73 {10 10000000 362225}
1 74 {10 10000000 350160}
1 75 {10 10000000 347333}
1 76 {10 10000000 348729}
1 77 {10 10000000 357447}
1 78 {10 10000000 356099}
1 79 {10 10000000 359105}
1 80 {10 1512317 35078}
2 0 {10 10000000 366975}
2 1 {10 10000000 368735}
2 2 {10 10000000 355435}
2 3 {10 10000000 348195}
2 4 {10 10000000 345012}
2 5 {10 10000000 342133}
2 6 {10 10000000 343412}
2 7 {10 10000000 356421}
2 8 {10 10000000 324177}
2 9 {10 10000000 325281}
2 10 {10 10000000 332088}
2 11 {10 10000000 348725}
2 12 {10 10000000 360541}
2 13 {10 10000000 352102}
2 14 {10 10000000 367485}
2 15 {10 10000000 328654}
2 16 {10 10000000 365116}
2 17 {10 10000000 342801}
2 18 {10 10000000 364364}
2 19 {10 10000000 361577}
2 20 {10 10000000 343364}
2 21 {10 10000000 353354}
2 22 {10 10000000 356013}
2 23 {10 10000000 350822}
2 24 {10 10000000 332234}
2 25 {10 10000000 346059}
2 26 {10 10000000 331937}
2 27 {10 10000000 333176}
2 28 {10 10000000 337717}
2 29 {10 10000000 326221}
2 30 {10 10000000 327490}
2 31 {10 10000000 307541}
2 32 {10 10000000 314666}
2 33 {10 10000000 313374}
2 34 {10 10000000 332490}
2 35 {10 10000000 292411}
2 36 {10 10000000 350984}
2 37 {10 10000000 311086}
2 38 {10 10000000 304144}
2 39 {10 10000000 321157}
2 40 {10 10000000 359235}
2 41 {10 10000000 351788}
2 42 {10 10000000 358203}
2 43 {10 10000000 361789}
2 44 {10 10000000 343921}
2 45 {10 10000000 348553}
2 46 {10 10000000 366249}
2 47 {10 10000000 353106}
2 48 {10 10000000 363744}
2 49 {10 10000000 345782}
2 50 {10 10000000 358334}
2 51 {10 10000000 349833}
2 52 {10 10000000 365175}
2 53 {10 10000000 365240}
2 54 {10 10000000 358513}
2 55 {10 10000000 326164}
2 56 {10 10000000 358070}
2 57 {10 10000000 326951}
2 58 {10 10000000 366894}
2 59 {10 10000000 334756}
2 60 {10 10000000 365848}
2 61 {10 10000000 339737}
2 62 {10 10000000 364040}
2 63 {10 10000000 351943}
2 64 {10 10000000 367213}
2 65 {10 10000000 363389}
2 66 {10 10000000 364143}
2 67 {10 10000000 358502}
2 68 {10 10000000 352324}
2 69 {10 10000000 355376}
2 70 {10 10000000 333026}
2 71 {10 10000000 356471}
2 72 {10 10000000 351610}
2 73 {10 10000000 354511}
2 74 {10 10000000 354749}
2 75 {10 10000000 357665}
2 76 {10 10000000 352939}
2 77 {10 10000000 360383}
2 78 {10 10000000 361756}
2 79 {10 8177921 341413}
3 0 {10 10000000 343976}
3 1 {10 10000000 326807}
3 2 {10 10000000 350653}
3 3 {10 10000000 354987}
3 4 {10 10000000 335914}
3 5 {10 10000000 362037}
3 6 {10 10000000 350240}
3 7 {10 10000000 363666}
3 8 {10 10000000 363751}
3 9 {10 10000000 330864}
3 10 {10 10000000 358885}
3 11 {10 10000000 353605}
3 12 {10 10000000 333736}
3 13 {10 10000000 328909}
3 14 {10 10000000 364121}
3 15 {10 10000000 358515}
3 16 {10 10000000 346289}
3 17 {10 10000000 361639}
3 18 {10 10000000 355652}
3 19 {10 10000000 351016}
3 20 {10 10000000 356804}
3 21 {10 10000000 353195}
3 22 {10 10000000 357223}
3 23 {10 10000000 357420}
3 24 {10 10000000 341723}
3 25 {10 10000000 356179}
3 26 {10 10000000 350975}
3 27 {10 10000000 347858}
3 28 {10 10000000 346713}
3 29 {10 10000000 354963}
3 30 {10 10000000 356534}
3 31 {10 10000000 339397}
3 32 {10 10000000 347435}
3 33 {10 10000000 372788}
3 34 {10 10000000 358881}
3 35 {10 10000000 349338}
3 36 {10 10000000 371665}
3 37 {10 10000000 349636}
3 38 {10 10000000 363850}
3 39 {10 10000000 348755}
3 40 {10 10000000 338448}
3 41 {10 10000000 332687}
3 42 {10 10000000 348683}
3 43 {10 10000000 349445}
3 44 {10 10000000 330417}
3 45 {10 10000000 363837}
3 46 {10 10000000 359227}
3 47 {10 10000000 353577}
3 48 {10 10000000 349612}
3 49 {10 10000000 349140}
3 50 {10 10000000 332059}
3 51 {10 10000000 352250}
3 52 {10 10000000 347556}
3 53 {10 10000000 309022}
3 54 {10 10000000 323208}
3 55 {10 10000000 323418}
3 56 {10 10000000 335830}
3 57 {10 10000000 328789}
3 58 {10 10000000 337183}
3 59 {10 10000000 263381}
3 60 {10 10000000 356396}
3 61 {10 10000000 357069}
3 62 {10 10000000 357756}
3 63 {10 10000000 350924}
3 64 {10 10000000 349223}
3 65 {10 10000000 341432}
3 66 {10 10000000 339564}
3 67 {10 10000000 350445}
3 68 {10 10000000 352607}
3 69 {10 10000000 348479}
3 70 {10 10000000 344022}
3 71 {10 10000000 346207}
3 72 {10 10000000 354424}
3 73 {10 10000000 361990}
3 74 {10 10000000 344771}
3 75 {10 10000000 350332}
3 76 {10 10000000 351083}
3 77 {10 10000000 378678}
3 78 {10 10000000 330210}
3 79 {10 9450041 339077}
4 0 {10 10000000 360879}
4 1 {10 10000000 350283}
4 2 {10 10000000 340966}
4 3 {10 10000000 348256}
4 4 {10 10000000 362521}
4 5 {10 10000000 351813}
4 6 {10 10000000 367934}
4 7 {10 10000000 354204}
4 8 {10 10000000 329541}
4 9 {10 10000000 357207}
4 10 {10 10000000 369633}
4 11 {10 10000000 352731}
4 12 {10 10000000 353209}
4 13 {10 10000000 356009}
4 14 {10 10000000 367720}
4 15 {10 10000000 353075}
4 16 {10 10000000 364098}
4 17 {10 10000000 353949}
4 18 {10 10000000 347616}
4 19 {10 10000000 364540}
4 20 {10 10000000 364338}
4 21 {10 10000000 364116}
4 22 {10 10000000 344656}
4 23 {10 10000000 355646}
4 24 {10 10000000 355450}
4 25 {10 10000000 354318}
4 26 {10 10000000 340048}
4 27 {10 10000000 349392}
4 28 {10 10000000 330142}
4 29 {10 10000000 356491}
4 30 {10 10000000 362768}
4 31 {10 10000000 349479}
4 32 {10 10000000 345514}
4 33 {10 10000000 365215}
4 34 {10 10000000 363047}
4 35 {10 10000000 365233}
4 36 {10 10000000 357495}
4 37 {10 10000000 355452}
4 38 {10 10000000 331445}
4 39 {10 10000000 343764}
4 40 {10 10000000 321127}
4 41 {10 10000000 369477}
4 42 {10 10000000 362756}
4 43 {10 10000000 359802}
4 44 {10 10000000 340337}
4 45 {10 10000000 345869}
4 46 {10 10000000 356434}
4 47 {10 10000000 339273}
4 48 {10 10000000 342901}
4 49 {10 10000000 340464}
4 50 {10 10000000 358015}
4 51 {10 10000000 355996}
4 52 {10 10000000 354989}
4 53 {10 10000000 352042}
4 54 {10 10000000 342183}
4 55 {10 10000000 340142}
4 56 {10 10000000 348605}
4 57 {10 10000000 357838}
4 58 {10 10000000 355364}
4 59 {10 10000000 347295}
4 60 {10 10000000 336036}
4 61 {10 10000000 355029}
4 62 {10 10000000 350694}
4 63 {10 10000000 374462}
4 64 {10 10000000 368739}
4 65 {10 10000000 348073}
4 66 {10 10000000 353550}
4 67 {10 10000000 364656}
4 68 {10 10000000 360315}
4 69 {10 10000000 340735}
4 70 {10 10000000 338983}
4 71 {10 10000000 345872}
4 72 {10 10000000 336068}
4 73 {10 10000000 343664}
4 74 {10 10000000 332341}
4 75 {10 10000000 321290}
4 76 {10 10000000 336577}
4 77 {10 10000000 310899}
4 78 {10 10000000 324587}
4 79 {10 9459741 267736}
5 0 {10 10000000 356779}
5 1 {10 10000000 345086}
5 2 {10 10000000 363442}
5 3 {10 10000000 360677}
5 4 {10 10000000 341107}
5 5 {10 10000000 347118}
5 6 {10 10000000 359664}
5 7 {10 10000000 364610}
5 8 {10 10000000 348283}
5 9 {10 10000000 343652}
5 10 {10 10000000 360419}
5 11 {10 10000000 359367}
5 12 {10 10000000 358488}
5 13 {10 10000000 350865}
5 14 {10 10000000 350921}
5 15 {10 10000000 370498}
5 16 {10 10000000 367584}
5 17 {10 10000000 362362}
5 18 {10 10000000 362192}
5 19 {10 10000000 344849}
5 20 {10 10000000 362283}
5 21 {10 10000000 369034}
5 22 {10 10000000 359525}
5 23 {10 10000000 366297}
5 24 {10 10000000 346475}
5 25 {10 10000000 352850}
5 26 {10 10000000 352569}
5 27 {10 10000000 371075}
5 28 {10 10000000 358997}
5 29 {10 10000000 364320}
5 30 {10 10000000 339884}
5 31 {10 10000000 359283}
5 32 {10 10000000 345003}
5 33 {10 10000000 344835}
5 34 {10 10000000 362369}
5 35 {10 10000000 361178}
5 36 {10 10000000 348136}
5 37 {10 10000000 347893}
5 38 {10 10000000 378418}
5 39 {10 10000000 351902}
5 40 {10 10000000 347604}
5 41 {10 10000000 345246}
5 42 {10 10000000 349666}
5 43 {10 10000000 348184}
5 44 {10 10000000 350124}
5 45 {10 10000000 361508}
5 46 {10 10000000 343905}
5 47 {10 10000000 358946}
5 48 {10 10000000 367251}
5 49 {10 10000000 370333}
5 50 {10 10000000 351793}
5 51 {10 10000000 337496}
5 52 {10 10000000 377139}
5 53 {10 10000000 362378}
5 54 {10 10000000 363147}
5 55 {10 10000000 368860}
5 56 {10 10000000 346440}
5 57 {10 10000000 358218}
5 58 {10 10000000 372762}
5 59 {10 10000000 337673}
5 60 {10 10000000 356240}
5 61 {10 10000000 344688}
5 62 {10 10000000 352630}
5 63 {10 10000000 342910}
5 64 {10 10000000 356179}
5 65 {10 10000000 357042}
5 66 {10 10000000 353129}
5 67 {10 10000000 358734}
5 68 {10 10000000 357471}
5 69 {10 10000000 362044}
5 70 {10 10000000 353163}
5 71 {10 10000000 331318}
5 72 {10 10000000 346614}
5 73 {10 10000000 332190}
5 74 {10 10000000 356316}
5 75 {10 10000000 377346}
5 76 {10 10000000 349124}
5 77 {10 10000000 357946}
5 78 {10 10000000 339468}
5 79 {10 10000000 356049}
5 80 {10 1625788 35904}
6 0 {10 10000000 327094}
6 1 {10 10000000 363642}
6 2 {10 10000000 340504}
6 3 {10 10000000 364669}
6 4 {10 10000000 351269}
6 5 {10 10000000 350017}
6 6 {10 10000000 361126}
6 7 {10 10000000 351460}
6 8 {10 10000000 344446}
6 9 {10 10000000 356104}
6 10 {10 10000000 313916}
6 11 {10 10000000 345234}
6 12 {10 10000000 345429}
6 13 {10 10000000 344385}
6 14 {10 10000000 327013}
6 15 {10 10000000 330752}
6 16 {10 10000000 335710}
6 17 {10 10000000 312714}
6 18 {10 10000000 318504}
6 19 {10 10000000 299102}
6 20 {10 10000000 357671}
6 21 {10 10000000 356120}
6 22 {10 10000000 349356}
6 23 {10 10000000 348221}
6 24 {10 10000000 357210}
6 25 {10 10000000 359364}
6 26 {10 10000000 352121}
6 27 {10 10000000 341557}
6 28 {10 10000000 341032}
6 29 {10 10000000 340083}
6 30 {10 10000000 346299}
6 31 {10 10000000 345801}
6 32 {10 10000000 362255}
6 33 {10 10000000 324360}
6 34 {10 10000000 340955}
6 35 {10 10000000 355531}
6 36 {10 10000000 345620}
6 37 {10 10000000 349337}
6 38 {10 10000000 350638}
6 39 {10 10000000 342797}
6 40 {10 10000000 355683}
6 41 {10 10000000 364580}
6 42 {10 10000000 352408}
6 43 {10 10000000 369500}
6 44 {10 10000000 343354}
6 45 {10 10000000 346035}
6 46 {10 10000000 370570}
6 47 {10 10000000 332608}
6 48 {10 10000000 347803}
6 49 {10 10000000 346415}
6 50 {10 10000000 362761}
6 51 {10 10000000 345443}
6 52 {10 10000000 361259}
6 53 {10 10000000 343557}
6 54 {10 10000000 340557}
6 55 {10 10000000 352570}
6 56 {10 10000000 359479}
6 57 {10 10000000 355869}
6 58 {10 10000000 354869}
6 59 {10 10000000 373739}
6 60 {10 10000000 376523}
6 61 {10 10000000 354332}
6 62 {10 10000000 354604}
6 63 {10 10000000 345351}
6 64 {10 10000000 352983}
6 65 {10 10000000 344008}
6 66 {10 10000000 345888}
6 67 {10 10000000 345818}
6 68 {10 10000000 352124}
6 69 {10 10000000 357209}
6 70 {10 10000000 345264}
6 71 {10 10000000 335966}
6 72 {10 10000000 361365}
6 73 {10 10000000 357298}
6 74 {10 10000000 349504}
6 75 {10 10000000 346672}
6 76 {10 10000000 356570}
6 77 {10 10000000 343039}
6 78 {10 10000000 369966}
6 79 {10 9824157 370335}
7 0 {10 10000000 346502}
7 1 {10 10000000 346012}
7 2 {10 10000000 384581}
7 3 {10 10000000 353461}
7 4 {10 10000000 368249}
7 5 {10 10000000 348120}
7 6 {10 10000000 346454}
7 7 {10 10000000 351996}
7 8 {10 10000000 322318}
7 9 {10 10000000 346814}
7 10 {10 10000000 352539}
7 11 {10 10000000 351886}
7 12 {10 10000000 357580}
7 13 {10 10000000 357721}
7 14 {10 10000000 368333}
7 15 {10 10000000 341677}
7 16 {10 10000000 340369}
7 17 {10 10000000 321093}
7 18 {10 10000000 336063}
7 19 {10 10000000 365284}
7 20 {10 10000000 360604}
7 21 {10 10000000 338280}
7 22 {10 10000000 332650}
7 23 {10 10000000 343332}
7 24 {10 10000000 346896}
7 25 {10 10000000 351645}
7 26 {10 10000000 347584}
7 27 {10 10000000 327898}
7 28 {10 10000000 341332}
7 29 {10 10000000 361183}
7 30 {10 10000000 324301}
7 31 {10 10000000 357373}
7 32 {10 10000000 352467}
7 33 {10 10000000 332569}
7 34 {10 10000000 329297}
7 35 {10 10000000 317667}
7 36 {10 10000000 318946}
7 37 {10 10000000 306092}
7 38 {10 10000000 320569}
7 39 {10 10000000 311069}
7 40 {10 10000000 327741}
7 41 {10 10000000 358760}
7 42 {10 10000000 357884}
7 43 {10 10000000 357493}
7 44 {10 10000000 343233}
7 45 {10 10000000 342052}
7 46 {10 10000000 354616}
7 47 {10 10000000 345636}
7 48 {10 10000000 347876}
7 49 {10 10000000 346179}
7 50 {10 10000000 350832}
7 51 {10 10000000 348809}
7 52 {10 10000000 361078}
7 53 {10 10000000 366010}
7 54 {10 10000000 359536}
7 55 {10 10000000 377524}
7 56 {10 10000000 356680}
7 57 {10 10000000 347279}
7 58 {10 10000000 349568}
7 59 {10 10000000 340243}
7 60 {10 10000000 357862}
7 61 {10 10000000 351536}
7 62 {10 10000000 353207}
7 63 {10 10000000 365001}
7 64 {10 10000000 345456}
7 65 {10 10000000 361221}
7 66 {10 10000000 341483}
7 67 {10 10000000 355036}
7 68 {10 10000000 322299}
7 69 {10 10000000 368450}
7 70 {10 10000000 353392}
7 71 {10 10000000 343799}
7 72 {10 10000000 358800}
7 73 {10 10000000 359984}
7 74 {10 10000000 355535}
7 75 {10 10000000 367260}
7 76 {10 10000000 335115}
7 77 {10 10000000 355138}
7 78 {10 10000000 359770}
7 79 {10 9011398 344037}
8 0 {10 10000000 351592}
8 1 {10 10000000 365566}
8 2 {10 10000000 351212}
8 3 {10 10000000 359609}
8 4 {10 10000000 351237}
8 5 {10 10000000 334549}
8 6 {10 10000000 368450}
8 7 {10 10000000 357219}
8 8 {10 10000000 362595}
8 9 {10 10000000 351961}
8 10 {10 10000000 365097}
8 11 {10 10000000 355678}
8 12 {10 10000000 352290}
8 13 {10 10000000 361250}
8 14 {10 10000000 372863}
8 15 {10 10000000 359036}
8 16 {10 10000000 343845}
8 17 {10 10000000 349518}
8 18 {10 10000000 356835}
8 19 {10 10000000 353259}
8 20 {10 10000000 354313}
8 21 {10 10000000 363602}
8 22 {10 10000000 342934}
8 23 {10 10000000 362824}
8 24 {10 10000000 372476}
8 25 {10 10000000 354901}
8 26 {10 10000000 361604}
8 27 {10 10000000 359373}
8 28 {10 10000000 361142}
8 29 {10 10000000 318284}
8 30 {10 10000000 357506}
8 31 {10 10000000 353280}
8 32 {10 10000000 357808}
8 33 {10 10000000 349728}
8 34 {10 10000000 344997}
8 35 {10 10000000 356127}
8 36 {10 10000000 364648}
8 37 {10 10000000 348864}
8 38 {10 10000000 366423}
8 39 {10 10000000 358529}
8 40 {10 10000000 354677}
8 41 {10 10000000 342740}
8 42 {10 10000000 360098}
8 43 {10 10000000 359685}
8 44 {10 10000000 361438}
8 45 {10 10000000 359356}
8 46 {10 10000000 333905}
8 47 {10 10000000 358843}
8 48 {10 10000000 341053}
8 49 {10 10000000 348841}
8 50 {10 10000000 319030}
8 51 {10 10000000 343017}
8 52 {10 10000000 340288}
8 53 {10 10000000 358064}
8 54 {10 10000000 330226}
8 55 {10 10000000 344072}
8 56 {10 10000000 327024}
8 57 {10 10000000 321352}
8 58 {10 10000000 313118}
8 59 {10 10000000 290261}
8 60 {10 10000000 336734}
8 61 {10 10000000 360413}
8 62 {10 10000000 343228}
8 63 {10 10000000 349005}
8 64 {10 10000000 365518}
8 65 {10 10000000 367650}
8 66 {10 10000000 359616}
8 67 {10 10000000 352284}
8 68 {10 10000000 354699}
8 69 {10 10000000 349946}
8 70 {10 10000000 346437}
8 71 {10 10000000 347794}
8 72 {10 10000000 349799}
8 73 {10 10000000 357566}
8 74 {10 10000000 334620}
8 75 {10 10000000 346670}
8 76 {10 10000000 345488}
8 77 {10 10000000 345676}
8 78 {10 10000000 356704}
8 79 {10 9249781 346672}
9 0 {10 10000000 357243}
9 1 {10 10000000 351764}
9 2 {10 10000000 350989}
9 3 {10 10000000 353460}
9 4 {10 10000000 350974}
9 5 {10 10000000 359974}
9 6 {10 10000000 352253}
9 7 {10 10000000 347871}
9 8 {10 10000000 348460}
9 9 {10 10000000 361771}
9 10 {10 10000000 369672}
9 11 {10 10000000 338504}
9 12 {10 10000000 355497}
9 13 {10 10000000 350650}
9 14 {10 10000000 356923}
9 15 {10 10000000 347195}
9 16 {10 10000000 356898}
9 17 {10 10000000 357057}
9 18 {10 10000000 360296}
9 19 {10 10000000 352260}
9 20 {10 10000000 352879}
9 21 {10 10000000 355344}
9 22 {10 10000000 344188}
9 23 {10 10000000 329444}
9 24 {10 10000000 367585}
9 25 {10 10000000 348549}
9 26 {10 10000000 357557}
9 27 {10 10000000 346024}
9 28 {10 10000000 343437}
9 29 {10 10000000 356120}
9 30 {10 10000000 365743}
9 31 {10 10000000 347890}
9 32 {10 10000000 354791}
9 33 {10 10000000 359434}
9 34 {10 10000000 348587}
9 35 {10 10000000 348914}
9 36 {10 10000000 347893}
9 37 {10 10000000 359255}
9 38 {10 10000000 349851}
9 39 {10 10000000 361314}
9 40 {10 10000000 345256}
9 41 {10 10000000 336860}
9 42 {10 10000000 359402}
9 43 {10 10000000 346734}
9 44 {10 10000000 344026}
9 45 {10 10000000 352475}
9 46 {10 10000000 347856}
9 47 {10 10000000 370857}
9 48 {10 10000000 360353}
9 49 {10 10000000 359350}
9 50 {10 10000000 328332}
9 51 {10 10000000 349087}
9 52 {10 10000000 340937}
9 53 {10 10000000 337138}
9 54 {10 10000000 342893}
9 55 {10 10000000 337115}
9 56 {10 10000000 363954}
9 57 {10 10000000 368905}
9 58 {10 10000000 333552}
9 59 {10 10000000 345809}
9 60 {10 10000000 349796}
9 61 {10 10000000 353435}
9 62 {10 10000000 345275}
9 63 {10 10000000 369960}
9 64 {10 10000000 355906}
9 65 {10 10000000 361891}
9 66 {10 10000000 339656}
9 67 {10 10000000 350497}
9 68 {10 10000000 350561}
9 69 {10 10000000 323359}
9 70 {10 10000000 335577}
9 71 {10 10000000 337097}
9 72 {10 10000000 341544}
9 73 {10 10000000 333902}
9 74 {10 10000000 340419}
9 75 {10 10000000 312165}
9 76 {10 10000000 306976}
9 77 {10 10000000 346181}
9 78 {10 10000000 305369}
9 79 {10 9727258 295929}

*/

package main

import (
	"bytes"
	"encoding/binary"
	"fmt"
	"math"
	"os"
	"path"
	"sync"
	"sync/atomic"
	"time"

	"ip_addr_counter/pkg/btree"
	"ip_addr_counter/pkg/file"
	"ip_addr_counter/pkg/ip"
	"ip_addr_counter/pkg/util"
)

const dataFolder = "data"
const dstFolder = "dst"

const ipPath = "ip_addresses.xml"
// const ipPath = "addreses - Copy.txt"
const ipPageSize = 4 * 1024 * 1024 // 4MB
const ipCacheSize = 1024
const ipIteratorCount = 10

// const tPath = "rbtree"
const tPath = "btree"

// const elementsToRead = 53_687_090 // == ~1GB rbtree file
// const elementsToRead = 55_924_053 // == ~1GB btree file if degree == 10
const elementsToRead = 10_000_000

const arrayIndexSize = 4

const degree = 10
const maxChildCount = 2 * degree
const minChildCount = degree
const maxKeyCount = maxChildCount - 1
const minKeyCount = degree - 1

var maxNodeCount = int(math.Ceil(float64(elementsToRead) / float64(minKeyCount)))
var minNodeCount = int(math.Ceil(float64(elementsToRead) / float64(maxKeyCount)))
var nodeSize = btree.NodeSize[uint32, ip.IP, KL, CL]()
var virtualFileSIze = maxNodeCount * nodeSize

type KL [maxKeyCount * ip.IpSize]byte
type CL [maxChildCount * arrayIndexSize]byte


func processStage(
	pwd string,
	i int,
	metaArr *[]*btree.Metadata[uint32],
	t *btree.BTree[uint32, ip.IP, KL, CL],
) *btree.BTree[uint32, ip.IP, KL, CL] {
	tFile := util.Must(os.OpenFile(
		path.Join(pwd, dataFolder, dstFolder, tPath + fmt.Sprintf("_%v_%v", i, len(*metaArr))),
		os.O_RDWR|os.O_CREATE|os.O_TRUNC,
		os.ModePerm,
	))
	tFile.ReadFrom(bytes.NewBuffer(t.File().Slice(0, uint64(t.NodeCount()) * uint64(nodeSize))))
	util.PanicIfErr(tFile.Close())

	*metaArr = append(*metaArr, t.Meta())
	meta := *t.Meta()
	meta.Count = 0
	meta.Root = 0
	return btree.New[uint32, ip.IP, KL, CL](t.File(), &meta)
}

func main() {
	pwd := util.Must(os.Getwd())
	ipFile := util.Must(os.Open(path.Join(pwd, dataFolder, ipPath)))
	ipIterators := ip.Iterator(ipFile, ipPageSize, ipCacheSize, ipIteratorCount)
	n := uint64(0)
	start := time.Now()

	go func() {
		for {
			time.Sleep(time.Second)
			sec := time.Since(start).Seconds()
			fmt.Printf(
				"elem %d, %d sec, %d eps, iter %d\n",
				n, uint64(sec), n / uint64(sec), len(ipIterators),
			)
		}
	}()

	fmt.Println("nodeSize", btree.NodeSize[uint32, ip.IP, KL, CL]())
	fmt.Println("maxNodeCount", maxNodeCount)
	fmt.Println("minNodeCount", minNodeCount)
	fmt.Println("virtualFile", virtualFileSIze)
	tMetas := make([][]*btree.Metadata[uint32], len(ipIterators))
	wg := sync.WaitGroup{}

	for i, iterator := range ipIterators {
		wg.Add(1)
		go func (i int, iterator chan []byte)  {
			defer wg.Done()
			stage := 0
			ipParser := ip.Parser()
			virtualFile := file.New()
			virtualFile.Truncate(uint64(virtualFileSIze))
			t := btree.New[uint32, ip.IP, KL, CL](virtualFile, &btree.Metadata[uint32]{Degree: degree})
			tMetas[i] = []*btree.Metadata[uint32]{}

			for itm := range iterator {
				atomic.AddUint64(&n, 1)
				k := ip.IP(binary.BigEndian.Uint32(util.Must(ipParser.Parse(itm))))
				t.Put(k)
				if t.Count() == elementsToRead {
					fmt.Println("STAGE0", i, "|", stage + 1, "|", n, "|", t.Count(), "|", t.NodeCount(), "|", *t.Meta(), "|", time.Since(start))
					t = processStage(pwd, i, &tMetas[i], t)
					stage++
				}
			}

			if t.Count() != elementsToRead {
				fmt.Println("STAGE1", i, "|", stage + 1, "|", n, "|", t.Count(), "|", t.NodeCount(), "|", *t.Meta(), "|", time.Since(start))
				processStage(pwd, i, &tMetas[i], t)
			}
		}(i, iterator)
	}

	wg.Wait()
	for i, arr := range tMetas {
		for j, meta := range arr {
			fmt.Println(i, j, *meta)
		}
	}

	// cnt := 0
	// max := IP(0)
	// util.SetInterval(func(start, now time.Time) {
	// 	fmt.Println(uint64(now.Sub(start).Seconds()), cnt)
	// }, time.Second)

	// rbtArr := []*rbtree.RBTreeReader[uint32, IP]{}
	// tMetaArr := []*rbtree.Metadata[uint32]{
	// 	{NodeKeySize: 4, Root: 66,   Null: 0, Count: 53687089},
	// 	{NodeKeySize: 4, Root: 8057, Null: 0, Count: 53687090},
	// 	{NodeKeySize: 4, Root: 952,  Null: 0, Count: 53687090},
	// 	{NodeKeySize: 4, Root: 544,  Null: 0, Count: 53687090},
	// 	{NodeKeySize: 4, Root: 4242, Null: 0, Count: 53687090},
	// }

	// for i := range tMetaArr {
	// 	rbtArr = append(rbtArr, rbtree.NewReader[uint32, IP](file.NewFromOSFile(
	// 		util.Must(os.OpenFile(
	// 			path.Join(pwd, dataFolder, tPath + fmt.Sprintf("_%d", i)),
	// 			os.O_RDONLY,
	// 			os.ModePerm,
	// 		)),
	// 	), tMetaArr[i]))
	// }

	// rbtArr[0].Scan(nil, func(key IP) (stop bool, err error) {
	// 	cnt++

	// 	if key > max {
	// 		max = key
	// 	}

	// 	return
	// })
	// fmt.Println(cnt)
	// fmt.Println(rbtArr[0].Max(), max)
}
